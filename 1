#include<iostream>
using namespace std;
class complex{
    public:
    float real,img;
    complex () {}
    complex operator+(complex);
    complex operator*(complex);
    friend ostream &operator<<(ostream&,complex&);
    friend istream &operator>>(istream&,complex&);
};

complex complex::operator+(complex obj)
{
    complex tmp;
    tmp.real= real+obj.real;
    tmp.img= img+obj.img;
    return tmp;
}
complex complex::operator*(complex obj)
{
    complex tmp;
    tmp.real= real*obj.real-img*obj.img;
    tmp.img= real*obj.img+img*obj.real;
    return tmp;
}
istream &operator>>(istream &in,complex&obj)
{
   in>>obj.real;
   in>>obj.img;
   return in; 
}
ostream &operator<<(ostream &out, complex&obj)
{
    out<<""<<obj.real;
    out<<"+"<<obj.img<<"i";
    return out; 
}
int main()
{
	complex a,b,c,d;
	cout<<"\n the first complex number is: \t";
	cout<<"\n enter real and img: \t";
	cin>>a;
	cout<<"\n the second complex number is: \t";
	cout<<"\n enter real and img: \t";
	cin>>b;
	cout<<"\n arithemetic operations";
	c=a+b;
	cout<<"addition =";
	cout<<c;
	d=a*b;
	cout<<"\n multiplication =";
	cout<<d;
	cout<<endl;
	return 0;
}

